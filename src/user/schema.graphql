#import Movie from '../movie/schema.graphql'
#import MovieSortParams from '../movie/schema.graphql'
#import PaginationParams from '../graphql/pagination.graphql'
#import PageInfo from '../graphql/pagination.graphql'

type WatchedMoviesConnection {
  totalCount: Int!
  edges: [WatchedMovieEdge!]!
  pageInfo: PageInfo
}

type WatchedMovieEdge {
  node: Movie!
  cursor: String!
}

input WatchedMoviesParams {
  pagination: PaginationParams
  sorting: MovieSortParams
}

type User {
  id: ID!
  username: String!
  watchedMovies(params: WatchedMoviesParams): WatchedMoviesConnection
}

input UserFetchParams {
  userId: ID!
}

input MarkWatchedMovieParams {
  userId: ID!
  tmdbId: String!
}

input MovieListParams {
  userId: ID!
  pagination: PaginationParams
}

input CreateUserParams {
  username: String!
}

extend type Query {
  fetchUser(params: UserFetchParams!): User
}

extend type Mutation {
  markWatchedMovie(params: MarkWatchedMovieParams!): Movie
  createUser(params: CreateUserParams!): User!
}

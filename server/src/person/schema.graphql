#import Movie from '../movie/schema.graphql';
#import TvEpisode from '../tvEpisode/schema.graphql'
#import PageInfo from '../graphql/pagination.graphql'

type Person {
  tmdbId: String!
  name: String!
  profilePath: String
  movies(params: PersonalizedCreditConnectionParams): MovieCreditConnection
  episodes(params: PersonalizedCreditConnectionParams): EpisodeCreditConnection
}

input PersonalizedCreditConnectionParams {
  userId: ID!
  exceptMovie: String
  exceptTvShow: String
}

type MovieCreditConnection {
  totalCount: Int!
  edges: [MovieCreditEdge!]!
  pageInfo: PageInfo
}

type MovieCreditEdge {
  node: Movie!
  cursor: String!
  characterName: String
}

type EpisodeCreditConnection {
  totalCount: Int!
  edges: [EpisodeCreditEdge!]!
  pageInfo: PageInfo
}

type EpisodeCreditEdge {
  node: TvEpisode!
  cursor: String!
  characterName: String
}

extend type Movie {
  credits: CreditsConnection
}

extend type TvEpisode {
  credits: CreditsConnection
}

type CreditsConnection {
  totalCount: Int!
  edges: [CreditsEdge!]!
  pageInfo: PageInfo
}

type CreditsEdge {
  node: Person!
  cursor: String!
  characterName: String
}

input PersonFetchParams {
  tmdbId: String!
}

extend type Query {
  fetchPerson(params: PersonFetchParams!): Person
}
